package com.sstc.hmis.permission.dbaccess.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import com.sstc.hmis.permission.dbaccess.data.PermsTQuery;
import com.sstc.hmis.permission.dbaccess.data.PermsTRole;
import com.sstc.hmis.permission.dbaccess.data.PermsTStaff;
import com.sstc.hmis.permission.dbaccess.data.PermsTStaffExample;
import com.sstc.hmis.permission.dbaccess.data.TLinkmanInfo;
@Mapper
public interface PermsTStaffMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int countByExample(PermsTStaffExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int deleteByExample(PermsTStaffExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int deleteByPrimaryKey(String clId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int insert(PermsTStaff record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int insertSelective(PermsTStaff record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	List<PermsTStaff> selectByExample(PermsTStaffExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	PermsTStaff selectByPrimaryKey(String clId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int updateByExampleSelective(@Param("record") PermsTStaff record, @Param("example") PermsTStaffExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int updateByExample(@Param("record") PermsTStaff record, @Param("example") PermsTStaffExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int updateByPrimaryKeySelective(PermsTStaff record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perms.perms_t_staff
	 * @mbggenerated  Mon Apr 10 16:50:56 CST 2017
	 */
	int updateByPrimaryKey(PermsTStaff record);
	
	/*
	 * 有条件的查询Grid展示；
	 */
	List<PermsTStaff> selStaffInfos(PermsTQuery permsTQuery);
	/*
	 * 根据员工Id查询组织信息；
	 */
	List<String> selStaffOrgInfos(PermsTStaff staff);
	/*
	 * 根据职位Id查询组织信息；
	 */
	String selStaffOrgInfoByPostId(@Param("postId") String postId);

	/**
	 * @param pTQuery
	 * @return
	 */
	List<PermsTStaff> pageList(PermsTQuery pTQuery);

	/**
	 * @param condition
	 * @return
	 */
	int countLoginTimes(Map<String, Object> condition);

	/**
	 * @param condition
	 * @return
	 */
	int insertLoginInfo(Map<String, Object> condition);
	
	String findOrganizationByStaffId(PermsTStaff staff);
	
	List<String> selStaffOrgInfos2(PermsTStaff staff);
	
	List<PermsTStaff> findStaffListByRoleId(PermsTRole record);
	
	List<PermsTStaff> findStaffListByRoleIdLeft(PermsTRole record);
	
	List<PermsTStaff> getAllStaffList(Map<String, Object> paramMap);
	
	List<String> getUserIdByJobId(Map<String, Object> paramMap);
	
	TLinkmanInfo getStaffById(Map<String, Object> paramMap);
	
	/**
	 * 审核不通过 更新Staff表数据状态
	 * @param paramMap 参数Map
	 */
	void updateStaffStatus(Map<String, Object> paramMap);
	
	/**
	 * 审核通过更新密码
	 * @param paramMap 参数Map
	 */
	void updateStaffPsd(Map<String, Object> paramMap);
	
	List<PermsTStaff> findStaffByPhoneAccount(Map<String, Object> paramMap);

	/**
	 * @param staff
	 * @return
	 */
	List<PermsTStaff> listStaffWithOrgInfo(PermsTStaff staff);

	/**
	 * 根据员工ID列表查询员工信息
	 * @param idList 员工ID列表
	 * @param hotelId 员工酒店ID
	 * @return 员工信息列表（带组织信息orgInfo）
	 */
	List<PermsTStaff> listStaffById(@Param("list")List<String> idList, @Param("hotelId")String hotelId);

	/**
	 * 方法描述: 根据账号获取用户名信息，姓名进行特殊处理
	 * @author yaodm
	 * @date 2017年11月28日 下午7:40:34
	 * @param accnos
	 * @return List<Staff>  
	 */
	List<PermsTStaff> getStaffInfoByAccnos(@Param("accnos") List<String> accnos, @Param("hotelId") String hotelId);
	
	/**
	 * 依据用户ID，酒店ID获取角色Id
	 * @param paramMap 参数Map
	 * @return 角色ID
	 */
	List<String> getStaffRoleId(Map<String, Object> paramMap);
	
	/**
	 * 依据角色ID，酒店ID获取权限列表
	 * @param paramMap 参数Map
	 * @return 权限列表
	 */
	List<String> getRolePermissionList(Map<String, Object> paramMap);
	
	/**
	 * 依据用户ID获取当前用户所属的群组ID
	 * @param paramMap 参数Map
	 */
	List<String> getGroupIdList(Map<String, Object> paramMap);
	
	/**
	 * 依据用户ID，酒店ID获取当前用户所属群组ID
	 * @param paramMap 参数Map
	 */
	List<String> getGroupIdListByHotelId(Map<String, Object> paramMap);
	
	/**
	 * 依据部门ID获取员工信息Id
	 * @param paramMap 参数Map
	 */
	List<PermsTStaff> getStaffInfoByDeptId(Map<String, Object> paramMap);
	
	// add by liurongrong 2018/03/20 begin
	PermsTStaff findByIdOrAccount(Map<String, Object> paramMap);
	// add by liurongrong 2018/03/20 end
	/**
	 * 查询员工（新审批人管理新建按人员）
	 * @author yuankairui
	 */
	List<PermsTStaff> pageListForNewApprover(PermsTQuery pTQuery);
}